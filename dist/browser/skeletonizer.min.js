!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):t.ImageSkeletonizer=i()}(this,function(){"use strict";var t=function(t,i){this.tolerance=void 0!==i?i:12,this.width=t.width,this.height=t.height,this.data=new Uint8Array(t.width*t.height),this._buildBinaryImage(t,this.tolerance)};t.prototype.constructor=t,t.prototype.getIndex=function(t,i){return i*this.width+t},t.prototype.getValue=function(t,i){return this.data[this.getIndex(t,i)]},t.prototype._buildBinaryImage=function(t,i){for(var h=this.width*this.height,e=0;e<h;e++){var s=4*e;t.data[s]<125&&t.data[s+1]<125&&t.data[s+2]<125?this.data[e]=1:this.data[e]=0}};var i=t,h=function(t,h,e,s){if(!(e instanceof i))throw"IntDistanceImage Error : source must be an instance of BinaryImage";this.coeff=t,this.width=e.width,this.height=e.height,this.data=new Array(e.width*e.height),this._buildDistanceImage(t,h,e,s)};h.prototype.constructor=h,h.prototype.rebuild=function(t,i,h,e){this.coeff=t,this._buildDistanceImage(t,i,h,e,this.data)},h.prototype.getCoeff=function(){return this.coeff},h.prototype.getIndex=function(t,i){return i*this.width+t},h.prototype.getValue=function(t,i){return this.data[this.getIndex(t,i)]},h.prototype._buildDistanceImage=function(t,i,h,e){const s=h.width,n=h.height;for(let t=0;t<s;++t)this.data[t]=0;for(let o=1;o<n-1;++o){this.data[o*s]=0;for(let n=1;n<s-1;++n){let s=this.getIndex(n,o);this.data[s]=0;let a=0;if(h.data[s]!=e){let h=this.getIndex(n-1,o-1),e=this.getIndex(n,o-1),r=this.getIndex(n-1,o),d=this.getIndex(n+1,o-1);a=Math.min(this.data[h]+i,this.data[e]+t),a=Math.min(a,this.data[r]+t),a=Math.min(a,this.data[d]+i),this.data[s]=a}}this.data[this.getIndex(s-1,o)]=0}for(let t=0;t<s;++t)this.data[this.getIndex(t,n-1)]=0;for(let o=n-2;o>0;--o)for(let n=s-2;n>0;--n){let s=this.getIndex(n,o),a=this.data[s];if(h.data[s]!=e){let h=this.getIndex(n+1,o+1),e=this.getIndex(n,o+1),r=this.getIndex(n-1,o+1),d=this.getIndex(n+1,o);a=Math.min(a,this.data[h]+i),a=Math.min(a,this.data[e]+t),a=Math.min(a,this.data[r]+i),this.data[s]=Math.min(a,this.data[d]+t)}}},h.prototype.toGreyScale=function(t,i){let h=new Uint8ClampedArray(this.width*this.height*4),e=0;for(let t=0;t<this.width*this.height;t++)e=this.data[t]>e?this.data[t]:e;for(let t=0,s=0,n=0;t<this.height;t++)for(let o=0;o<this.width;o++){let a=t*this.width+o;1==i.data[a]?(h[s]=255,h[s+1]=0,h[s+2]=0,h[s+3]=255):this.data[a]>3?(n=255*this.data[a]/e,h[s]=n,h[s+1]=n,h[s+2]=n,h[s+3]=255):(h[s]=255,h[s+1]=255,h[s+2]=255,h[s+3]=255),s+=4}let s=t.createImageData(this.width,this.height);return s.data.set(h),s};var e=h,s=function(t,i,h,e){this.width=t.width,this.height=t.height,this.data=new Array(this.width*this.height);for(let h=0;h<this.width*this.height;h++)t.data[h]!=i?this.data[h]=1:this.data[h]=0;let s=0;for(let t=0;t<e.width*e.height;t++)s=e.data[t]>s?e.data[t]:s;this.CleanBorderPixels(),this.skeletonizeEckhardtMaderlechner93(h,e,.8*s),this.CleanBorderPixels(),this.thin()};s.prototype.constructor=s,s.prototype.CleanBorderPixels=function(){for(let t=0;t<this.width;t++)this.data[t]=0,this.data[(this.height-1)*this.width+t]=0;for(let t=1;t<this.height-2;t++)this.data[t*this.width]=0,this.data[t*this.width+(this.width-1)]=0},s.prototype.thin=function(){let t=this.width-2;for(let i=1;i<this.height-1;i++){t+=2;for(let i=1;i<this.width-1;i++){if(t++,0==(1&this.data[t]))continue;const i=this.getCurrentNeighborhood(this.data,t);(0==(7&i)&&112==(112&i)||0==(14&i)&&160==(160&i)||0==(28&i)&&193==(193&i)||0==(56&i)&&130==(130&i)||0==(112&i)&&7==(7&i)||0==(224&i)&&10==(10&i)||0==(193&i)&&28==(28&i)||0==(131&i)&&40==(40&i))&&(this.data[t]=0)}}return this.data},s.prototype.skeletonizeEckhardtMaderlechner93=function(t,i,h){const e=this.width*this.height,s=new Array(this.width*this.height),n=new Array(this.width*this.height),o=new Array(this.width*this.height),a=new Array(this.width*this.height),r=new Array(this.width*this.height),d=new Array(this.width*this.height),w=new Array(this.width*this.height),g=new Array(this.width*this.height);let f=!0,c=0;const l=this.width+1,u=e-this.width-1;for(;f&&c<t;){f=!1;for(let t=l;t<u;t++)n[t]=this.getNbStrongNeighbors(this.data,t),o[t]=n[t]+this.getNbNoStrongNeighbors(this.data,t),this.data[t]?4==n[t]?(s[t]=2,g[t]=1):(s[t]=1,g[t]=2):s[t]=0;for(let t=l;t<u;t++)this.data[t]?a[t]=1==s[t]&&(2==s[t+1]||2==s[t-1]||2==s[t+this.width]||2==s[t-this.width]):a[t]=!1,a[t]?(a[t]=1,g[t]=3):a[t]=0;for(let t=l;t<u;++t){if(this.data[t]&&1==s[t]){let i=0!=(1&this.data[t+1]),h=0!=(1&this.data[t-this.width+1]),e=0!=(1&this.data[t-this.width]),n=0!=(1&this.data[t-this.width-1]),o=0!=(1&this.data[t-1]),a=0!=(1&this.data[t+this.width-1]),r=0!=(1&this.data[t+this.width]),w=0!=(1&this.data[t+this.width+1]);const g=(1-i)*h+(1-h)*e+(1-e)*n+(1-n)*o+(1-o)*a+(1-a)*r+(1-r)*w+(1-w)*i,f=i+h+e+n+o+a+r+w,c=1==g||0==g&&8==f;d[t]=1==s[t]&&c&&(i||e||o||r)}else d[t]=!1;d[t]&&(g[t]=4)}for(let t=l;t<u;++t){if(this.data[t]){const i=2==s[t+1]&&!this.data[t-1],h=2==s[t-1]&&!this.data[t+1],e=2==s[t+this.width]&&!this.data[t-this.width],n=2==s[t-this.width]&&!this.data[t+this.width];r[t]=a[t]&&(i||h||e||n)}else r[t]=!1;r[t]&&(g[t]=5)}for(let t=0;t<e;++t)this.data[t]?d[t]&&r[t]?(w[t]=0,g[t]=6,f=!0):0==o[t]?w[t]=0:i.data[t]<h&&1==o[t]?(w[t]=0,f=!0):w[t]=1:(w[t]=0,g[t]=0);for(let t=0;t<w.length;t++)this.data[t]=w[t];++c}},s.prototype.getCurrentNeighborhood=function(t,i){return(1&t[i-1])<<7|(1&t[i+1])<<3|(1&t[i+this.width])<<5|(1&t[i-this.width])<<1|1&t[i-(this.width+1)]|(1&t[i-(this.width-1)])<<2|(1&t[i+(this.width-1)])<<6|(1&t[i+(this.width+1)])<<4},s.prototype.nbNeighbours=function(t){return(1&t)+(t>>1&1)+(t>>2&1)+(t>>3&1)+(t>>4&1)+(t>>5&1)+(t>>6&1)+(t>>7&1)},s.prototype.getNbStrongNeighbors=function(t,i){return t[i-1]+t[i+1]+t[i-this.width]+t[i+this.width]},s.prototype.getNbNoStrongNeighbors=function(t,i){return t[i-1-this.width]+t[i-1+this.width]+t[i+1-this.width]+t[i+1+this.width]},s.prototype.isInnerBoundaryPixel=function(t,i){return 1==t[i]&&2==t[i-1]||2==t[i+1]||2==t[i-this.width]||2==t[i+this.width]},s.prototype.isSimpleBoundaryPixel=function(t,i){let h=0!=(1&t[i+1]),e=0!=(1&t[i-this.width+1]),s=0!=(1&t[i-this.width]),n=0!=(1&t[i-this.width-1]),o=0!=(1&t[i-1]),a=0!=(1&t[i+this.width-1]),r=0!=(1&t[i+this.width]),d=0!=(1&t[i+this.width+1]);const w=(1-h)*e+(1-e)*s+(1-s)*n+(1-n)*o+(1-o)*a+(1-a)*r+(1-r)*d+(1-d)*h;return(1==w||0==w&&8==h+e+s+n+o+a+r+d)&&(h||s||o||r)};var n=s,o=function(t,i,h){this.position=t,this.weight=i,this.neighbors=h};o.prototype.constructor=o,o.prototype.getPosition=function(){return this.position},o.prototype.getWeight=function(){return this.weight},o.prototype.getNeighbors=function(){return this.neighbors},o.prototype.setPosition=function(t){this.position=t},o.prototype.setWeight=function(t){this.weight=t},o.prototype.setNeighbors=function(t){this.neighbors=t};var a=o,r=function(t,i){this.x=t,this.y=i},d=function(t,i){this.skelImg=t,this.distImg=i};d.prototype.constructor=d,d.prototype.buildHierarchy=function(){const t=this.skelImg.width*this.skelImg.height;let i,h=new Array(t),e=this._findFirstPixelWithNeighbors(this.skelImg,this.distImg,h);if(e<t){const t=e%this.skelImg.width,s=Math.round(e/this.skelImg.width);i=new a(new r(t+.5,s+.5),this.distImg.data[e],new Map),h[e]=i,this._recHierarchy(i,e,this.skelImg,this.distImg,h)}return console.log(i),i},d.prototype._findFirstPixelWithNeighbors=function(t,i,h){const e=t.width*t.height;let s;for(s=0;s<e;s++)if(1&t.data[s]){if(0!=t.getCurrentNeighborhood(t.data,s))break;t.data[s]=0}return s},d.prototype._addNeighbors=function(t,i,h,e,s,n){const o=h%e,d=Math.round(h/e);let w=0;if(1&i){if(!n[h-e-1]){const t=new a(new r(o-1+.5,d-1+.5),s[h-e-1],new Map);n[h-e-1]=t,w++}t.neighbors.set(h-e-1,n[h-e-1])}if(2&i){if(!n[h-e]){const t=new a(new r(o+.5,d-1+.5),s[h-e],new Map);n[h-e]=t,w++}t.neighbors.set(h-e,n[h-e])}if(4&i){if(!n[h-e+1]){const t=new a(new r(o+1+.5,d-1+.5),s[h-e+1],new Map);n[h-e+1]=t,w++}t.neighbors.set(h-e+1,n[h-e+1])}if(8&i){if(!n[h+1]){const t=new a(new r(o+1+.5,d+.5),s[h+1],new Map);n[h+1]=t,w++}t.neighbors.set(h+1,n[h+1])}if(16&i){if(!n[h+e+1]){const t=new a(new r(o+1+.5,d+1+.5),s[h+e+1],new Map);n[h+e+1]=t,w++}t.neighbors.set(h+e+1,n[h+e+1])}if(32&i){if(!n[h+e]){const t=new a(new r(o+.5,d+1+.5),s[h+e],new Map);n[h+e]=t,w++}t.neighbors.set(h+e,n[h+e])}if(64&i){if(!n[h+e-1]){const t=new a(new r(o-1+.5,d+1+.5),s[h+e-1],new Map);n[h+e-1]=t,w++}t.neighbors.set(h+e-1,n[h+e-1])}if(128&i){if(!n[h-1]){const t=new a(new r(o-1+.5,d+.5),s[h-1],new Map);n[h-1]=t,w++}t.neighbors.set(h-1,n[h-1])}return w},d.prototype._recHierarchy=function(t,i,h,e,s){const n=h.getCurrentNeighborhood(h.data,i);if(this._addNeighbors(t,n,i,h.width,e.data,s))for(let[i,n]of t.getNeighbors())this._recHierarchy(n,i,h,e,s)};var w=d,g={skeletonize:function(t){var h=new i(t),s=new e(3,4,h,0),o=new n(h,0,2e3,s);return{skeleton:new w(o,s).buildHierarchy(),binaryImg:h,distImg:s,skelImg:o}},displaySkeleton:function(t,i){const h=new Uint8ClampedArray(t.width*t.height*4);let e=0;for(let i=0;i<t.width*t.height;i++)e=t.data[i]>e?t.data[i]:e;for(let i=0,e=0;i<t.height;i++)for(let s=0;s<t.width;s++){let n=i*t.width+s;1===t.data[n]?(h[e]=255,h[e+1]=0,h[e+2]=0,h[e+3]=255):(h[e]=255,h[e+1]=255,h[e+2]=255,h[e+3]=255),e+=4}const s=i.createImageData(t.width,t.height);return s.data.set(h),s}};return g});
